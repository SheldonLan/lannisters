import asyncio
import datetime
import json
import os
import random
import subprocess
import sys
import time
from functools import partial

import nextcord
import requests
from bs4 import BeautifulSoup
from nextcord import *
from nextcord.ext import commands, application_checks
from nextcord.ui import Button, View
from pytube import YouTube, Search
from translate import Translator

import choice
import secret

# consts
guild_lannisters = 1097370199897939970  # id –¥–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä–∞
servertime = datetime.datetime.utcnow() + datetime.timedelta(hours=3)  # –ø–æ–ª—É—á–µ–Ω–∏–µ –º—Å–∫ –≤—Ä–µ–º–µ–Ω–∏

# Activity
names = ["–Ø—Ä–∏–∫–æ–º", "–ú–∏–ª–æ–π", "–¢–æ–ª–µ–π", "–í–∞–ª–¥–∏—Å–æ–º", "–°–µ—Ä–≥–µ–µ–º", "–î–∞–Ω–∏–ª–æ–º", "–ò–≤–∞–Ω–æ–º"]
random_name = random.choice(names)
activity = nextcord.Activity(type=nextcord.ActivityType.watching, name=f"–∑–∞ {random_name}")

# Bot definition
bot = commands.Bot(intents=nextcord.Intents.all(), activity=activity, command_prefix="!")


# –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å
@bot.event
async def on_member_join(member: Member):
    welcomeChannel = bot.get_channel(1097370868897816626)
    embed = Embed(title="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
                  description=f"**–†–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–µ–±—è, {member.mention}!\n–ù–∞–¥–µ—é—Å—å, —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è –∑–¥–µ—Å—å.**")
    embed.set_image(
        "https://cdn-longterm.mee6.xyz/plugins/commands/images/762281010648842261/08734025084d41c21139210c8256695bfe62f6647349672c3bc194814f0cecda.gif")
    embed.set_footer(text="Lannister's FAMQ")
    role = nextcord.utils.get(member.guild.roles, name="4-level")
    await member.add_roles(role)
    await welcomeChannel.send(embed=embed)


# –ü—Ä–∞–≤–∏–ª–∞
@bot.slash_command(guild_ids=[guild_lannisters], description="[1-level] –ü—Ä–∞–≤–∏–ª–∞")
async def –ø—Ä–∞–≤–∏–ª–∞(interaction: Interaction):
    channelRules = bot.get_channel(1097373322947342366)
    await channelRules.send("**–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–º!** üò±\n–Ø –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º.\n\n"
                            "–ü–µ—Ä–≤–æ–µ —Å —á–µ–º **–Ω—É–∂–Ω–æ** –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è - —ç—Ç–æ –ø—Ä–∞–≤–∏–ª–∞. –£–≤–µ—Ä—è—é, –∏—Ö –Ω–µ–º–Ω–æ–≥–æ.\n"
                            "```1. –í—Å—ë —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —ç—Ç–æ–º –¥–∏—Å–∫–æ—Ä–¥–µ - –æ—Å—Ç–∞—ë—Ç—Å—è –≤ —ç—Ç–æ–º –¥–∏—Å–∫–æ—Ä–¥–µ\n"
                            "2. –í–∑–∞–∏–º–æ–≤–µ–∂–ª–∏–≤–æ—Å—Ç—å - –æ—Å–Ω–æ–≤–∞ –∞–¥–µ–∫–≤–∞—Ç–Ω–æ–≥–æ –∫–æ–º–º—å—é–Ω–∏—Ç–∏.\n"
                            "3. –í –ø–æ—á—Ç–∏ –∫–∞–∂–¥–æ–º –∫–∞–Ω–∞–ª–µ –µ—Å—Ç—å –∑–∞–∫—Ä–µ–ø, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å, –ø—Ä–µ–∂–¥–µ —á–µ–º —á—Ç–æ-—Ç–æ –ø–∏—Å–∞—Ç—å.\n"
                            "4. –ü—Ä–æ–≤–æ–¥–∏—Ç–µ –≤—Ä–µ–º—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ –∏ –ø—Ä–∏—è—Ç–Ω–æ :)```\n"
                            "–ö–∞—Å–∞–µ–º–æ –±–æ—Ç–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ <@265087722853498880> / <@504694073525796884>\n"
                            "–ü–µ—Ä–µ–¥ –ª—é–±–æ–π slash-–∫–æ–º–∞–Ω–¥–æ–π –µ—Å—Ç—å –∑–Ω–∞—á–æ–∫ \"[role]\", –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–º–∞–Ω–¥–µ."
                            "–ë–µ–∑ —ç—Ç–æ–π —Ä–æ–ª–∏. —É –í–∞—Å –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É (–æ–Ω–∞ –Ω–µ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞).")


choices = choice.contract_choices

"""
/–∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –ù–ê–ó–í–ê–ù–ò–ï_–ö–û–ù–¢–†–ê–ö–¢–ê

–í—ã–≤–æ–¥ Embed'ki –∏ –∫–Ω–æ–ø–∫–∏,
–ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã —É –í–∞—Å –ø–æ—è–≤–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ Embed —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ –≤—Ä–µ–º–µ–Ω–µ–º –≤–∑—è—Ç–∏—è,
–∞ —Ç–∞–∫–∂–µ –∫–Ω–æ–ø–∫–∞ –ö–æ–Ω—Ç—Ä–∞–∫—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω,
–ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ –∫–Ω–æ–ø–∫—É, –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ—Ç—á—ë—Ç –≤—Ä–µ–º–µ–Ω–∏ –∫–¥ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞,
–∫–∞–∫ —Ç–æ–ª—å–∫–æ –ö–î –±—É–¥–µ—Ç –ø–æ–¥—Ö–æ–¥–∏—Ç—å –∫ –∫–æ–Ω—Ü—É,
–±–æ—Ç —Ç–µ–≥–Ω–µ—Ç —Ä–æ–ª—å @–ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã –∏ –æ–ø–æ–≤–µ—Å—Ç–∏—Ç –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ö–î —É –ù–ê–ó–í–ê–ù–ò–ï_–ö–û–ù–¢–†–ê–ö–¢–ê,
—Ç–µ–º —Å–∞–º—ã–º –Ω–µ –ø—Ä–∏–¥—ë—Ç—Å—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —á–µ–∫–∞—Ç—å, –∫–æ–≥–¥–∞ –ø—Ä–æ–π–¥—ë—Ç –ö–î.
"""


@bot.slash_command(guild_ids=[guild_lannisters], description="[–ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã] –í–∑—è—Ç–∏–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞")
async def –∫–æ–Ω—Ç—Ä–∞–∫—Ç(
        interaction: Interaction,
        contract_name: str = SlashOption(description="–ö–∞–∫–æ–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç –í—ã –≤–∑—è–ª–∏?",
                                         required=True,
                                         choices=choices)):
    # –û–±—ä—è–≤–ª–µ–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
    accept_button = Button(label="–ö–æ–Ω—Ç—Ä–∞–∫—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω!", style=ButtonStyle.green, custom_id="accept_button")
    view = View()
    view.add_item(accept_button)

    contractStartEmbed = Embed(
        title=f"–í–Ω–∏–º–∞–Ω–∏–µ!",
        description=f"<@{interaction.user.id}> –≤–∑—è–ª –∫–æ–Ω—Ç—Ä–∞–∫—Ç {contract_name}.",
        colour=nextcord.Colour.dark_gold())
    contractStartEmbed.set_footer(text=f"–í—Ä–µ–º—è –≤–∑—è—Ç–∏—è: {servertime.strftime('%d.%m.%Y %H:%M:%S')}")

    contractEndedEmbed = Embed(title=f"–ö–æ–Ω—Ç—Ä–∞–∫—Ç {contract_name} –≤—ã–ø–æ–ª–Ω–µ–Ω!",
                               description=f"–ö–æ–Ω—Ç—Ä–∞–∫—Ç {contract_name} –≤—ã–ø–æ–ª–Ω–µ–Ω.\n–ü–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –¥–µ–π—Å—Ç–≤–∏–µ {interaction.user.name}.")
    contractEndedEmbed.set_footer(text=f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: " + servertime.strftime('%d.%m.%Y %H:%M:%S'))

    await interaction.send(embed=contractStartEmbed, ephemeral=False, view=view)

    async def on_button_click(interaction: Interaction):
        view.clear_items()
        await interaction.message.edit(embed=contractEndedEmbed, view=view)

        if contract_name == "–ë–æ–ª—å—à–æ–π —É–ª–æ–≤ (—Ä—ã–±–∫–∞)":
            contractTimeoutEmbed = Embed(
                title=f"–ö–æ–Ω—Ç—Ä–∞–∫—Ç –æ—Ç–∫–∞—Ç–∏–ª—Å—è!",
                description=f"{contract_name} –≤–∑—è—Ç—ã–π —Ä–∞–Ω–µ–µ {interaction.user.name} –æ—Ç–∫–∞—Ç–∏–ª—Å—è!",
                colour=nextcord.Colour.dark_blue()
            )

            couldown = ((servertime + datetime.timedelta(seconds=5)) - servertime).total_seconds()
            await asyncio.sleep(couldown)
            await bot.get_channel(interaction.channel_id).send(content="<@&1097373637381726368>",
                                                               embed=contractTimeoutEmbed)

        elif contract_name == "–ì—Ä–∞–Ω–¥–∏–æ–∑–Ω–∞—è —É–±–æ—Ä–∫–∞ (–º—É—Å–æ—Ä)":
            contractTimeoutEmbed = Embed(
                title=f"–ö–æ–Ω—Ç—Ä–∞–∫—Ç –æ—Ç–∫–∞—Ç–∏–ª—Å—è!",
                description=f"{contract_name} –≤–∑—è—Ç—ã–π —Ä–∞–Ω–µ–µ {interaction.user.name} –æ—Ç–∫–∞—Ç–∏–ª—Å—è!",
                colour=nextcord.Colour.dark_blue()
            )

            couldown = ((servertime + datetime.timedelta(seconds=5)) - servertime).total_seconds()
            await asyncio.sleep(couldown)
            await bot.get_channel(interaction.channel_id).send(content="<@&1097373637381726368>",
                                                               embed=contractTimeoutEmbed)

        elif contract_name == "–ú—è—Å–Ω–æ–π –¥–µ–Ω—å (–º—è—Å–æ)":
            contractTimeoutEmbed = Embed(
                title=f"–ö–æ–Ω—Ç—Ä–∞–∫—Ç –æ—Ç–∫–∞—Ç–∏–ª—Å—è!",
                description=f"{contract_name} –≤–∑—è—Ç—ã–π —Ä–∞–Ω–µ–µ {interaction.user.name} –æ—Ç–∫–∞—Ç–∏–ª—Å—è!",
                colour=nextcord.Colour.dark_blue()
            )

            couldown = ((servertime + datetime.timedelta(seconds=5)) - servertime).total_seconds()
            await asyncio.sleep(couldown)
            await bot.get_channel(interaction.channel_id).send(content="<@&1097373637381726368>",
                                                               embed=contractTimeoutEmbed)
        elif contract_name == "–î–æ–ª–≥–æ–∂–¥–∞–Ω–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞ (—Å—Ö–µ–º—ã)":
            contractTimeoutEmbed = Embed(
                title=f"–ö–æ–Ω—Ç—Ä–∞–∫—Ç –æ—Ç–∫–∞—Ç–∏–ª—Å—è!",
                description=f"{contract_name} –≤–∑—è—Ç—ã–π —Ä–∞–Ω–µ–µ {interaction.user.name} –æ—Ç–∫–∞—Ç–∏–ª—Å—è!",
                colour=nextcord.Colour.dark_blue()
            )

            couldown = ((servertime + datetime.timedelta(seconds=5)) - servertime).total_seconds()
            await asyncio.sleep(couldown)
            await bot.get_channel(interaction.channel_id).send(content="<@&1097373637381726368>",
                                                               embed=contractTimeoutEmbed)
        else:
            contractTimeoutEmbed = Embed(
                title=f"–ö–æ–Ω—Ç—Ä–∞–∫—Ç –æ—Ç–∫–∞—Ç–∏–ª—Å—è!",
                description=f"{contract_name} –≤–∑—è—Ç—ã–π —Ä–∞–Ω–µ–µ {interaction.user.name} –æ—Ç–∫–∞—Ç–∏–ª—Å—è!",
                colour=nextcord.Colour.dark_blue()
            )

            couldown = ((servertime + datetime.timedelta(seconds=5)) - servertime).total_seconds()
            await asyncio.sleep(couldown)
            await bot.get_channel(interaction.channel_id).send(content="<@&1097373637381726368>",
                                                               embed=contractTimeoutEmbed)

    # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –∫ –∫–Ω–æ–ø–∫–µ
    accept_button.callback = on_button_click


"""
–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞–Ω–¥–æ–º–Ω–æ–π —à—É—Ç–∫–∏ —á–µ—Ä–µ–∑ jokeapi
–ü–æ–ª—É—á–µ–Ω–∏–µ Json, –ø–∞—Ä—Å–∏–Ω–≥ –µ–≥–æ, –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ–¥–Ω–∏–º/–¥–≤—É–º—è —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.
"""


@bot.slash_command(guild_ids=[guild_lannisters], description="[2-level] –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–Ω–¥–æ–º–Ω–æ–π —à—É—Ç–∫–∏")
async def —à—É—Ç–∫–∞(interaction: Interaction):
    response = requests.get('https://v2.jokeapi.dev/joke/Any')
    jokeJson = json.loads(response.text)
    translator = Translator(from_lang='en', to_lang='ru')
    if jokeJson["type"] == 'single':
        await bot.get_channel(interaction.channel_id).send(translator.translate(str(jokeJson["joke"])))
    else:
        await bot.get_channel(interaction.channel_id).send(translator.translate(str(jokeJson["setup"])))
        time.sleep(2)
        await bot.get_channel(interaction.channel_id).send(translator.translate(str(jokeJson["delivery"])))


"""
–°–ª–µ—à-–∫–æ–º–∞–Ω–¥–∞ /–û—á–∏—Å—Ç–∏—Ç—å + "int: amount(–∫–æ–ª-–≤–æ)",
–í—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–Ω–∞–ª–∞,
–≥–¥–µ —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –±—ã–ª–∞ –≤—ã–∑–≤–∞–Ω–∞.
"""


@bot.slash_command(guild_ids=[guild_lannisters], description="[1-level] –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
@application_checks.has_any_role('1-level')
async def –æ—á–∏—Å—Ç–∏—Ç—å(interaction: Interaction,
                   amount: int = SlashOption(description="–°–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤—ã—à–µ —É–¥–∞–ª–∏—Ç—å?", required=True)):
    await bot.get_channel(interaction.channel_id).purge(limit=amount)
    await interaction.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <@{interaction.user.id}> —É–¥–∞–ª–∏–ª {amount} —Å–æ–æ–±—â–µ–Ω–∏–π")
    time.sleep(1)
    await bot.get_channel(interaction.channel_id).purge(limit=1)


"""
–û–±—ã—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º—É–∑—ã–∫–æ–π:
!play url - –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Ç—Ä–µ–∫–∞
!stop - –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ /skip)
!pause - –¥–ª—è –ø–∞—É–∑—ã
!resume - –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
!leave - –ø–æ–∫–∏–Ω—É—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª
"""


@bot.command()
async def play(ctx, url: str):
    re = requests.get(url).text
    soup = BeautifulSoup(re, "html.parser")
    filename = soup.find('title').text.replace(" - YouTube", "")
    if os.path.isfile(f'D:/tmp/{filename}.mp4'):
        await ctx.send("–£ –º–µ–Ω—è –µ—Å—Ç—å —ç—Ç–∞ –ø–µ—Å–Ω—è!")
        voice_channel = ctx.author.voice.channel
        voice_client = await voice_channel.connect()
        source = await nextcord.FFmpegOpusAudio.from_probe(f'D:/tmp/{filename}.mp4')
        voice_client.play(source)
        voicePlayEmbed = Embed(description=f"C–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: {filename}", colour=nextcord.Colour.random())
        voicePlayEmbed.set_footer(text=f"–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è, {ctx.author}")
        await ctx.send(embed=voicePlayEmbed)
        while voice_client.is_playing():
            await asyncio.sleep(2)
        await voice_client.disconnect()
    else:
        try:
            await ctx.send(
                "<a:musica53:1098869634880503908> –ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥, —è –∑–∞–≥—Ä—É–∂–∞—é –ø–µ—Å–Ω—é. <a:musica53:1098869634880503908>")
            yt = YouTube(url)
            await asyncio.sleep(3)
            stream = yt.streams.filter(only_audio=True).first()
            await asyncio.sleep(2)
            filename = stream.download(output_path='D:/tmp')
            voice_channel = ctx.author.voice.channel
            voice_client = await voice_channel.connect()
            source = await nextcord.FFmpegOpusAudio.from_probe(f'{filename}')
            voice_client.play(source)
            voicePlayEmbed = Embed(description=f"C–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: {filename.replace('D:/tmp', '').replace('.mp4', '')}",
                                   colour=nextcord.Colour.random())
            voicePlayEmbed.set_footer(text=f"–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è, {ctx.author}")
            await ctx.send(embed=voicePlayEmbed)
            while voice_client.is_playing():
                await asyncio.sleep(2)
            await voice_client.disconnect()
        except KeyError:
            try:
                await ctx.send(
                    "<a:srt_discordloading:1098494332991963157> –ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Å–Ω—é, –ø–æ–ø—Ä–æ–±—É—é –ø–æ –¥—Ä—É–≥–æ–º—É. <a:srt_discordloading:1098494332991963157>")
                yt = YouTube('https://youtu.be/' + url.split('watch?v=')[1].split('&')[0])
                stream = yt.streams.filter(only_audio=True).first()
                filename = stream.download(output_path='D:/tmp')
                voice_channel = ctx.author.voice.channel
                voice_client = await voice_channel.connect()
                source = await nextcord.FFmpegOpusAudio.from_probe(f'{filename}')
                voice_client.play(source)
                voicePlayEmbed = Embed(
                    description=f"C–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: {filename.replace('D:/tmp', '').replace('.mp4', '')}",
                    colour=nextcord.Colour.random())
                voicePlayEmbed.set_footer(text=f"–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è, {ctx.author}")
                await ctx.send(embed=voicePlayEmbed)
                while voice_client.is_playing():
                    await asyncio.sleep(2)
                await voice_client.disconnect()
            except KeyError:
                await ctx.send(
                    "<a:ghost64:1098869622645735565> –í–æ–æ–±—â–µ –Ω–µ –º–æ–≥—É –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø :c\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π !restart, –∞ –ø–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É. <a:ghost64:1098869622645735565>")


@bot.command()
async def pause(ctx):
    vc = ctx.voice_client
    try:
        if vc.is_playing():
            vc.pause()
    except AttributeError:
        await ctx.send("–Ø –Ω–∏—á–µ–≥–æ —Å–µ–π—á–∞—Å –Ω–µ –∏–≥—Ä–∞—é.")


@bot.command()
async def resume(ctx):
    vc = ctx.voice_client
    try:
        if vc.is_paused():
            vc.resume()
    except AttributeError:
        await ctx.send("–Ø –Ω–µ –Ω–∞ –ø–∞—É–∑–µ.")


@bot.command()
async def stop(ctx):
    vc = ctx.voice_client
    try:
        if vc.is_playing():
            vc.stop()
    except AttributeError:
        await ctx.send("–Ø –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞—é")


@bot.command()
async def leave(ctx):
    voice_client = ctx.guild.voice_client
    try:
        if voice_client.is_connected():
            await voice_client.disconnect()
    except AttributeError:
        await ctx.send("–Ø –Ω–µ –Ω–∞—Ö–æ–∂—É—Å—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!")


@bot.command()
async def restart(ctx):
    await ctx.send('–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é—Å—å...')
    subprocess.run(['bat.bat'])
    os.execl(sys.executable, sys.executable, "C:/Users/RTA-Telecom/Desktop/test files/lannisters/main.py")


"""to-do"""


@bot.slash_command(name="to-do")
async def todo(interaction: Interaction):
    await interaction.send("1. –î–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ set/remove/remember\n"
                           "2. ")


"""

–ù–æ–≤—ã–π —Å–∞–º–æ–ø–∏—Å–Ω—ã–π –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä
–ö–æ–º–∞–Ω–¥—ã:
/play voice_channel- –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ—á–µ—Ä–µ–¥–∏ —Ç—Ä–µ–∫–æ–≤ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ
/add url- –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ  —Ç—Ä–µ–∫–∞ –≤ –æ—á–µ—Ä–µ–¥—å, –ø–æ url –∏–¥—ë—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª, –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ —Å–∫–∞—á–∏–≤–∞–µ—Ç—Å—è –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –æ—á–µ—Ä–µ–¥—å
/showqueue - –≤—ã–≤–æ–¥ Embed —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ—á–µ—Ä–µ–¥—å—é —Ç—Ä–µ–∫–æ–≤
/clearqueue - –æ—á–∏—Å—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏
/search - –ø–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É
"""
@bot.slash_command(guild_ids=[guild_lannisters], description="–ü–æ–∏—Å–∫ –≤–∏–¥–µ–æ –ø–æ —Ç–µ–∫—Å—Ç—É")
async def search(interaction: Interaction, text: str = SlashOption(description="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞", required=True)):
    channel = bot.get_channel(interaction.channel_id)
    s = Search(text)
    search_opions = []
    title_option = []

    for search_object in s.results[:5]:
        video_id = str(search_object).split("videoId=")[1].replace(">", "")
        video_url_by_search = f"https://www.youtube.com/watch?v={video_id}"
        title_request = requests.get(video_url_by_search).text
        soup = BeautifulSoup(title_request, "html.parser")
        filename = soup.find('title').text.replace(" - YouTube", "")
        search_opions.append(filename)
    view = View()

    options_urls = {}

    for search_option in search_opions:
        video_id = str(s.results[search_opions.index(search_option)]).split("videoId=")[1].replace(">", "")
        video_url_by_search = f"https://www.youtube.com/watch?v={video_id}"
        options_urls[search_option] = video_url_by_search

    for element in search_opions:
        select_option = SelectOption(label=element)
        title_option.append(select_option)

    async def handle_select(interaction: nextcord.Interaction, select_menu: nextcord.ui.Select):
        selected_option = select_menu.values[0]
        selected_url = options_urls[selected_option]
        print(f"User: {interaction.user}\toption: {selected_option}\tURL: {selected_url}")
        channel = bot.get_channel(interaction.channel_id)
        await channel.send(f"{selected_url}")
        # yt = YouTube(selected_url)
        # stream = yt.streams.filter(only_audio=True).first()
        # filename = stream.download(output_path='D:/tmp')
        # with open("queue.txt", 'a', encoding="utf-8") as queue:
        #     queue.write(f"{filename.replace('D:/tmp', '')[1:].replace('.mp4', '')}\n")
        #     downloadAddEmbed = Embed(
        #         description=f"–§–∞–π–ª {filename.replace('D:/tmp', '')[1:].replace('.mp4', '')} –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è!",
        #         colour=nextcord.Colour.red())
        # await channel.send(embed=downloadAddEmbed)

    options = [nextcord.SelectOption(label=option) for option in search_opions]
    select_menu = nextcord.ui.Select(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Å–Ω—é", options=options)
    select_menu.callback = partial(handle_select, select_menu=select_menu)

    view.add_item(select_menu)
    await channel.send(content=f"–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ –ø–æ {text}", view=view)

@bot.slash_command(guild_ids=[guild_lannisters], description="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Å–Ω–∏ –ø–æ URL")
async def add(interaction: Interaction,
              url: str = SlashOption(description="–°—Å—ã–ª–∫–∞ –Ω–∞ youtube", required=True)):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
    re = requests.get(url).text
    soup = BeautifulSoup(re, "html.parser")
    filename = soup.find('title').text.replace(" - YouTube", "")
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if os.path.isfile(f'D:/tmp/{filename}.mp4'):
        with open("queue.txt", 'a', encoding="utf-8") as queue:
            queue.write(f"{filename.replace('D:/tmp', '')}\n")
            addEmbed = Embed(description=f"–§–∞–π–ª {filename} –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è!",
                             colour=nextcord.Colour.red())
        await interaction.send(embed=addEmbed, ephemeral=True)
    else:
        await interaction.send("–°–∫–∞—á–∏–≤–∞—é —Ñ–∞–π–ª.", ephemeral=True)
        yt = YouTube(url)
        stream = yt.streams.filter(only_audio=True).first()
        filename = stream.download(output_path='D:/tmp')
        with open("queue.txt", 'a', encoding="utf-8") as queue:
            queue.write(f"{filename.replace('D:/tmp', '')[1:].replace('.mp4', '')}\n")
            downloadAddEmbed = Embed(
                description=f"–§–∞–π–ª {filename.replace('D:/tmp', '')[1:].replace('.mp4', '')} –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è!",
                colour=nextcord.Colour.red())
        await interaction.edit_original_message(content="", embed=downloadAddEmbed)

@bot.slash_command(guild_ids=[guild_lannisters], description="–£–¥–∞–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–µ—Å–µ–Ω")
async def clearqueue(interaction: Interaction):
    with open("queue.txt", 'w', encoding='utf-8') as file:
        file.write('')
    clearEmbed = Embed(description=f"–û—á–µ—Ä–µ–¥—å –±—ã–ª–∞ –æ—á–∏—â–µ–Ω–∞ {interaction.user.name}", colour=nextcord.Colour.random())
    await interaction.send(embed=clearEmbed)


@bot.slash_command(guild_ids=[guild_lannisters], description="show queue")
async def showqueue(interaction: Interaction):
    with open('queue.txt', 'r', encoding="utf-8") as queue:
        lines = queue.read().split('\n')
        message = "\n".join(lines)
        queueEmbed = Embed(title="–û—á–µ—Ä–µ–¥—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:", description=f"{message}", colour=nextcord.Colour.random())
        await interaction.send(embed=queueEmbed)


@bot.slash_command(guild_ids=[guild_lannisters], description="play test")
async def play(interaction: Interaction, channel: VoiceChannel):
    voice_client = await channel.connect()
    with open('queue.txt', 'r', encoding="utf-8") as queue:
        queueList = queue.read().strip().split('\n')
    if len(queueList) == 0:
        await interaction.send("–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞")
    else:
        await interaction.send("–ó–∞–ø—É—Å–∫–∞—é—Å—å")
        for element in queueList:
            source = await nextcord.FFmpegOpusAudio.from_probe(f'D:/tmp/{element}.mp4')
            voice_client.play(source)
            voicePlayEmbed = Embed(description=f"C–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: {element}", colour=nextcord.Colour.random())
            voicePlayEmbed.set_footer(text=f"–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è, {interaction.user.name}")
            await interaction.edit_original_message(content="", embed=voicePlayEmbed)
            while voice_client.is_playing():
                await asyncio.sleep(5)
        await voice_client.disconnect()


"""
–í–ó–ü, –æ—Ç–ø—Ä–∞–≤–∫–∞ Embed —Å–æ–æ–±—â–µ–Ω–∏—è
–ü–æ –∫–ª–∏–∫—É –¥–æ–±–∞–≤–ª—è–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
–ü–æ –∫–ª–∏–∫—É —É–±–∏—Ä–∞–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
–ü—Ä–æ—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª-–≤–æ –∞–º–º—É–Ω–∏—Ü–∏–∏
"""


@bot.slash_command(guild_ids=[guild_lannisters], description="–í–æ–π–Ω–∞ –∑–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ")
async def –≤–∑–ø(interaction: Interaction, time: str = SlashOption(description="–í–æ —Å–∫–æ–ª—å–∫–æ –≥—Ä—É–ø–ø–∞–µ–º—Å—è?",
                                                                required=True)):
    edy_button = Button(label="–Ø –µ–¥—É!", style=ButtonStyle.green, custom_id="accept_button")
    view = View()
    view.add_item(edy_button)

    vzpEmbed = Embed(title="–ü–æ–µ—Ö–∞–ª–∏ –Ω–∞ –í–ó–ü?", description="–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å—á—ë—Ç–æ–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –∞–º–º—É–Ω–∏—Ü–∏–∏")
    vzpEmbed.set_footer(text=f"–û–±—ä—è–≤–∏–ª —Å–±–æ—Ä: {interaction.user.name}")
    sborshik = interaction.user.name

    with open('vzp.txt', 'w', encoding='utf-8') as vzptxt:
        vzptxt.write(f"<@{interaction.user.id}>\n")

    await interaction.send(f"{interaction.guild.get_role(1100736955643351070).mention} —Å–æ–±–∏—Ä–∞–µ–º—Å—è –≤ {time}",
                           embed=vzpEmbed, view=view)

    async def on_edy_button_click(interaction: Interaction):
        with open("vzp.txt", 'a', encoding="utf-8") as vpz_txt:
            list_vzp_members = open('vzp.txt', 'r', encoding='utf-8').read().strip().split('\n')
            if "<@" + str(interaction.user.id) + ">" in list_vzp_members:
                list_vzp_members.remove(f'<@{interaction.user.id}>')
                with open("vzp.txt", "w", encoding="utf-8") as f:
                    f.write('\n'.join(list_vzp_members) + "\n")
            else:
                vpz_txt.write(f"<@{interaction.user.id}>\n")
        vzp_members = open('vzp.txt', 'r', encoding='utf-8').read().strip().split("\n")
        counter = 0
        for el in vzp_members:
            counter += 1
        vzp_members_str = '\n'.join(vzp_members)

        bullets = counter * 300
        armor = counter * 2
        gun = counter

        vzp_edyEmbed = Embed(title="–ü–æ–µ—Ö–∞–ª–∏ –Ω–∞ –í–ó–ü?")
        vzp_edyEmbed.add_field(name="–ö—Ç–æ –µ–¥–µ—Ç:", value=f"{vzp_members_str}")
        vzp_edyEmbed.add_field(name="   ", value="   ")
        vzp_edyEmbed.add_field(name="–†–∞—Å—á—ë—Ç—ã:", value=f"–ù–∞ {counter} —á–µ–ª–æ–≤–µ–∫ –Ω—É–∂–Ω–æ:\n"
                                                      f"–ì–∞–Ω–æ–≤: {gun}\n"
                                                      f"–ü–∞—Ç—Ä–æ–Ω–æ–≤: {bullets}\n"
                                                      f"–ë—Ä–æ–Ω–∏–∫–æ–≤: {armor}")
        vzp_edyEmbed.set_footer(text=f"–û–±—ä—è–≤–∏–ª —Å–±–æ—Ä: {sborshik}")
        await interaction.message.edit(embed=vzp_edyEmbed, view=view)

    edy_button.callback = on_edy_button_click


bot.run(secret.key)
